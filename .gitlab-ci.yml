stages:
  - test
  - build
  - publish
  - deploy
  - cleanup

variables:
  CI_TAG: ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  REPO_URL: http://repo-staging.dc.prozorro.gov.ua/repos/helm/
  MONGODB_ROOT_PASSWORD: example
  MONGODB_REPLICA_SET_MODE: primary
  MONGODB_REPLICA_SET_NAME: rs0
  MONGODB_REPLICA_SET_KEY: replicaSetKey

test:
  image: docker-registry.prozorro.gov.ua/docker/images/python:3.8-alpine3.14
  stage: test
  tags:
    - kube-dev
  services:
    - bitnami/mongodb:latest
  before_script:
    - apk add git
    - pip install -r requirements.txt
    - pip install -e .
    - pip install pytest pytest-asyncio coverage
    - echo '127.0.0.1  mongo' >> /etc/hosts
  script:
    - cd tests && coverage run -m pytest
    - coverage report
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'

build:
  stage: build
  dependencies:
    - test
  tags:
    - shell
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_TAG .

publish:
  stage: publish
  dependencies:
    - build
  tags:
    - shell
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  variables:
    TAG: $CI_COMMIT_REF_SLUG
  script:
    - docker tag $CI_REGISTRY_IMAGE:$CI_TAG $CI_REGISTRY_IMAGE:$TAG
    - docker push $CI_REGISTRY_IMAGE:$TAG
  only:
    - branches
    - tags
  except:
    - schedules
    - master


publish_latest:
  extends: publish
  only:
    - master
  variables:
    TAG: "latest"
  except:
    - schedules


review:
  stage: deploy
  dependencies:
    - build
  tags:
    - shell
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    action: start
    url: http://api.${CI_COMMIT_REF_SLUG}.${K8S_DOMAIN}/api/2.5/tenders
    on_stop: stop_review
    auto_stop_in: 1 month
  variables:
    API_TAG: "master"
    FRONT_TAG: "0.2.11"
    TAG: $CI_COMMIT_REF_SLUG
  script:
    - helm3 repo add prozorro $REPO_URL
    - helm3 repo update
    - helm3 --debug upgrade $CI_COMMIT_REF_SLUG --install prozorro/prozorro --namespace dev-prozorro
          --set prozorro-api.image.tag=$API_TAG --set deployAuctions=false --set deployAuction=true
          --set prozorro-auction.api.image.tag=$TAG
          --set prozorro-auction.chronograph.image.tag=$TAG
          --set prozorro-auction.databridge.image.tag=$TAG
          --set prozorro-auction.frontend.image.tag=$FRONT_TAG
          --wait
  only:
    - branches
  except:
    - master
    - schedules
  when: manual


stop_review:
  stage: deploy
  script:
    - helm3 delete $CI_COMMIT_REF_SLUG
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    action: stop
  tags:
    - shell
  only:
    - branches
  except:
    - master
    - schedules
  when: manual


clenup-ci-image:
  stage: cleanup
  tags:
    - shell
  script:
    - docker rmi -f $CI_TAG || true
  when: always