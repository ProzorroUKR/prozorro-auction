version: '3'

services:
  mongo:
    hostname: mongo
    image: 'bitnami/mongodb:latest'
    environment:
      MONGODB_ROOT_PASSWORD: example
    logging:
      driver: "none"
    networks:
      - default

  mongo-express:
    image: mongo-express
    restart: always
    depends_on:
      - mongo
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: mongo
    logging:
      driver: "none"
    networks:
      - default

  api:
    hostname: auctions-api
    build: .
    environment:
      - MONGODB_URL=mongodb://root:example@mongo:27017
      - PYTHONUNBUFFERED=1
    volumes:
      - ./src:/app
    ports:
      - 8000:8000
    depends_on:
      - mongo
    networks:
      - default

  databridge:
    build: .
    environment:
      - MONGODB_URL=mongodb://root:example@mongo:27017
      - TEST_MODE=1
      - PYTHONUNBUFFERED=1
      - PUBLIC_API_HOST=http://api
      - API_HOST=http://api
      - API_TOKEN=auction
      - FEED_STEP_INTERVAL=5
      - API_LIMIT=50
    command: databridge.main
    volumes:
      - ./src:/app
    depends_on:
      - mongo
    networks:
      - default
      - dev-env_apinet

  chronograph:
    build: .
    environment:
      - MONGODB_URL=mongodb://root:example@mongo:27017
      - PYTHONUNBUFFERED=1
      - PUBLIC_API_HOST=http://api
      - API_HOST=http://api
      - API_TOKEN=auction
      - DS_HOST=http://ds
      - DS_USER=test
      - DS_PASSWORD=test
    command: chronograph.main
    volumes:
      - ./src:/app
    depends_on:
      - mongo
    networks:
      - default
      - dev-env_apinet

  frontend:
    build: ./frontend
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/app
    depends_on:
      - api
    ports:
      - 8080:80
    networks:
      - default

networks:
    default: {}
    dev-env_apinet:
        external: true
